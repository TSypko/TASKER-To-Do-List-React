{"version":3,"sources":["App/logo.svg","App/Tasks/trash.svg","App/themes.js","App/Globalstyle.js","App/useLocalStorageState.js","App/Wrapper/styled.js","App/Wrapper/index.js","App/Wrapper/FlexContainer/styled.js","App/Wrapper/FlexContainer/index.js","App/Switch/styled.js","App/Switch/index.js","App/Header/styled.js","App/Logo/styled.js","App/Logo/index.js","App/Header/index.js","App/Main/index.js","App/Section/styled.js","App/Section/index.js","App/Form/styled.js","App/Form/index.js","App/Tasks/styled.js","App/Tasks/index.js","App/Footer/Buttons/styled.js","App/Footer/Buttons/index.js","App/Footer/styled.js","App/Footer/index.js","App/App.js","App/useTasks.js","App/serviceWorker.js","index.js","App/Tasks/checked.svg"],"names":["module","exports","lightTheme","background","section_bg","section_text","shadow","greenButton","greenButton_lighter","redButton","redButton_lighter","switch","svg_image","darkTheme","GlobalStyles","createGlobalStyle","theme","useLocalStorageState","key","value","useState","localStorageState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","MainWrapper","styled","div","Wrapper","children","Container","FlexContainer","SwitchContainer","aside","Label","label","toggle","css","Button","button","toggled","Switch","event","htmlFor","id","onClick","HeaderContainer","header","HeaderSection","section","HeaderTitle","h1","Image","img","Logo","src","logo","alt","className","Header","title","Main","SectionContainer","SectionHeader","h2","Section","body","FormContainer","form","FormInput","input","FormButton","Form","addTask","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","preventDefault","newTaskContentTrimmed","trim","ref","type","autoFocus","placeholder","onChange","target","current","focus","Statement","span","content","Paragraph","p","centered","done","List","ul","Item","li","hidden","doneToggled","checked","remove","trash","removeToggled","Tasks","tasks","hideDone","removeTask","toggleTaskDone","length","map","task","ButtonContainer","doneAll","removeAll","Buttons","toggleHideDone","setAllDone","removeAllTasks","disabled","every","undefined","FooterContainer","footer","Footer","App","setHideDone","setTheme","buttonState","setButtonState","setTasks","filter","useTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4f72366e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.808985cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.04d13a08.svg\";","export const lightTheme = {\r\n    background: \"#c4bb91\",\r\n    section_bg: \"#fff\",\r\n    section_text: \"#141414\",\r\n    shadow: \"#555\",\r\n    greenButton: \"rgb(0, 172, 29)\",\r\n    greenButton_lighter: \"rgb(0, 218, 36)\",\r\n    redButton: \"rgb(172, 0, 0)\",\r\n    redButton_lighter: \"hsl(0, 100%, 45%)\",\r\n    switch: \"hsl(0, 0%, 100%)\",\r\n    svg_image: \"brightness(100%) invert(0%)\",\r\n};\r\n\r\nexport const darkTheme = {\r\n    background: \"#1a1a1a\",\r\n    section_bg: \"#2a3a41\",\r\n    section_text: \"rgb(255, 255, 255)\",\r\n    shadow: \"rgb(156, 156, 156)\",\r\n    greenButton: \"rgb(0, 172, 29)\",\r\n    greenButton_lighter: \"rgb(0, 218, 36)\",\r\n    redButton: \"rgb(172, 0, 0)\",\r\n    redButton_lighter: \"hsl(0, 100%, 45%)\",\r\n    switch: \"#2a3a41\",\r\n    svg_image: \"brightness(0%) invert(100%)\",\r\n};","import { createGlobalStyle } from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n  body {\r\n    background: ${({ theme }) => theme.background};\r\n    font-family: \"Roboto Condensed\", sans-serif;\r\n    transition: all 0.3s linear;\r\n  }\r\n  `","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorageState = (key, value) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(key);\r\n        if (localStorageState === null) {\r\n            return value;\r\n        }\r\n        return JSON.parse(localStorageState);\r\n    };\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key,\r\n            JSON.stringify(state));\r\n    }, [key, state]);\r\n    \r\n    return [state, setState];\r\n};","import styled from \"styled-components\";\r\n\r\nexport const MainWrapper = styled.div`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-height: 100vh;\r\n    `;","import React from 'react';\r\nimport { MainWrapper } from \"./styled\"\r\n\r\nconst Wrapper = ({ children }) => (\r\n    <MainWrapper>\r\n        {children}\r\n    </MainWrapper>\r\n)\r\n\r\nexport default Wrapper;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n        max-width: 800px;\r\n        width: 100%;\r\n    `;","import React from 'react';\r\nimport { Container } from \"./styled\"\r\n\r\nconst FlexContainer = ({ children }) => (\r\n    <Container>\r\n        {children}\r\n    </Container>\r\n\r\n);\r\n\r\nexport default FlexContainer;","import styled, { css } from \"styled-components\";\r\n\r\nexport const SwitchContainer = styled.aside`\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        margin: 10px auto;\r\n        max-width: 800px;\r\n    `;\r\n\r\nexport const Label = styled.label`\r\n        font-weight: 700;\r\n        color: ${({ theme }) => theme.section_text};\r\n        margin-right: 10px;\r\n\r\n        ${({ toggle }) => toggle && css`\r\n            position: relative;\r\n            display: block;\r\n            padding: 5px 10px;\r\n            width: 65px;\r\n            background-color: ${({ theme }) => theme.switch};\r\n            background-image: ${({ theme }) => theme.switch};\r\n            transition: all 0.5s;\r\n            cursor: pointer;\r\n            box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.shadow};\r\n\r\n            &::after {\r\n                content: \"\";\r\n                display: block;\r\n                height: 20px;\r\n                width: 20px;\r\n                background-color: ${({ theme }) => theme.background};\r\n                border: 1px solid ${({ theme }) => theme.section_text};\r\n                transition: all 0.3s;\r\n                transform: translatex(130%);\r\n            }\r\n\r\n            &:hover {\r\n                background-image: linear-gradient(to right, #2a3a41, #c4bb91);\r\n            }\r\n        `}\r\n    \r\n    `;\r\n\r\nexport const Button = styled.button`\r\n        display: none;\r\n\r\n        ${({ toggled }) => toggled && css`   \r\n            +Label::after {\r\n                transform: translatex(0);\r\n           }\r\n       `}\r\n    `;","import React from \"react\";\r\nimport { SwitchContainer, Label, Button } from \"./styled\"\r\n\r\nconst Switch = ({ event, state }) => (\r\n\r\n  <SwitchContainer>\r\n    <Label htmlFor=\"switch\">\r\n      Night Mode\r\n    </Label>\r\n    <Button\r\n      toggled={state}\r\n      id=\"switch\"\r\n      onClick={event}\r\n    />\r\n    <Label toggle htmlFor=\"switch\"></Label>\r\n  </SwitchContainer>\r\n  \r\n);\r\n\r\nexport default Switch;","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer  = styled.header`\r\n        margin: 10px auto;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n    `;\r\n\r\n    \r\nexport const HeaderSection  = styled.section`\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: ${({ theme }) => theme.section_bg};\r\n        color: ${({ theme }) => theme.section_text};\r\n        width: 100%;\r\n        padding: 20px;\r\n        box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.shadow};\r\n    `;\r\n\r\nexport const HeaderTitle  = styled.h1`\r\n        text-transform: capitalize;\r\n        color: ${({ theme }) => theme.section_text};\r\n        font-size: 40px;\r\n        text-align: center;   \r\n\r\n        @media (max-width: 767px) {\r\n            font-size: 30px;\r\n        }\r\n    `;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n        align-self: center;\r\n        margin: 10px;\r\n        width: 70px;\r\n        filter: ${({ theme }) => theme.svg_image};\r\n\r\n        @media (max-width: 767px) {\r\n            max-width: 60%;\r\n        }\r\n    `;","import React from 'react';\r\nimport { Image } from \"./styled\"\r\nimport logo from '../logo.svg';\r\n\r\nconst Logo = () => (\r\n    <Image\r\n        src={logo}\r\n        alt=\"Logotype\"\r\n        className=\"logo\"\r\n    />\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { HeaderContainer, HeaderSection, HeaderTitle } from \"./styled\"\r\nimport Logo from \"../Logo\";\r\n\r\nconst Header = ({ title }) => (\r\n    <HeaderContainer>\r\n        <HeaderSection>\r\n            <Logo />\r\n            <HeaderTitle>{title}</HeaderTitle>\r\n        </HeaderSection>\r\n    </HeaderContainer>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Main = ({children}) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Main;","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n        background-color: ${({ theme }) => theme.section_bg};\r\n        color: ${({ theme }) => theme.section_text};\r\n        width: 100%;\r\n        padding: 20px;\r\n        margin: 10px 0px;\r\n        box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.shadow};\r\n    `;\r\nexport const SectionHeader = styled.h2`\r\n        text-transform: uppercase;\r\n        font-size: 20px;\r\n        padding-bottom: 10px;\r\n        border-bottom: 2px solid;\r\n        border-color: ${({ theme }) => theme.section_text};\r\n    `;","import React from 'react';\r\nimport { SectionContainer, SectionHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, body }) => (\r\n    <SectionContainer>\r\n        {\r\n            title\r\n                ? <SectionHeader>{title}</SectionHeader>\r\n                : \"\"\r\n        }\r\n        {body}\r\n    </SectionContainer>\r\n)\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n        display: flex;\r\n\r\n        @media (max-width: 575px) {\r\n             flex-direction: column;\r\n        }\r\n    `;\r\n\r\nexport const FormInput = styled.input`\r\n         width: 100%;\r\n         padding: 10px 20px;\r\n    `;\r\n    \r\nexport const FormButton = styled.button`\r\n        text-transform: uppercase;\r\n        cursor: pointer;\r\n        border: none;\r\n        min-width: max-content;\r\n        background-color: ${({ theme }) => theme.section_text};\r\n        color: ${({ theme }) => theme.section_bg};\r\n        letter-spacing: 1px;\r\n        padding: 10px 10px;\r\n        margin-left: 10px;\r\n        transition: color 0.4s, transform 0.1s, background-color 0.4s;\r\n\r\n        @media (max-width: 575px) {\r\n            margin-top: 10px;\r\n            margin-left: 0px;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: ${({ theme }) => theme.section_bg};\r\n            color: ${({ theme }) => theme.section_text};\r\n            border: 1px solid ${({ theme }) => theme.section_text};\r\n            font-weight: bold;\r\n            padding-left: 7px;\r\n        }\r\n        &:active {\r\n            border: 1px solid ${({ theme }) => theme.section_text};\r\n            transform: scale(0.9);\r\n        }\r\n    `;","import React, { useState, useRef } from 'react';\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\"\r\n\r\nconst Form = ({ addTask }) => {\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef();\r\n\r\n    const focus = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTaskContentTrimmed = newTaskContent.trim();\r\n        if (!newTaskContentTrimmed) {\r\n            return\r\n        }\r\n        event.preventDefault();\r\n        addTask(newTaskContentTrimmed);\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <FormContainer onSubmit={onFormSubmit}>\r\n            <FormInput\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                className=\"form__input\"\r\n                autoFocus\r\n                placeholder=\"write your task here\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <FormButton\r\n                className=\"form__button\"\r\n                onClick={focus}\r\n            >\r\n                submit\r\n            </FormButton>\r\n        </FormContainer>\r\n    );\r\n};\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\nimport checked from \"./checked.svg\";\r\nimport trash from \"./trash.svg\";\r\n\r\nexport const Statement = styled.span`\r\n        font-weight: 400;\r\n        font-size: 14px;\r\n        font-style: italic;\r\n\r\n        ${({ content }) => content && css`\r\n            &::after {\r\n                content: \"Done tasks are hidden\";\r\n            }\r\n        `}\r\n    `;\r\n\r\nexport const Paragraph = styled.p`\r\n        font-weight: 400;\r\n        max-width: 100%;\r\n        text-align: justify;\r\n        flex-grow: 1;\r\n        font-size: 20px;\r\n        overflow-wrap: break-word;\r\n        word-wrap: break-word;\r\n\r\n        @media (max-width: 575px) {\r\n            font-size: 16px;\r\n        }\r\n\r\n        ${({ centered }) => centered && css`\r\n            text-align: center;\r\n            font-style: italic;\r\n        `}\r\n        ${({ done }) => done && css`\r\n            text-decoration: line-through;\r\n            font-style: italic;\r\n        `}\r\n    `;\r\n\r\nexport const List = styled.ul`\r\n        list-style: none;\r\n        padding-left: 0px;\r\n        background-color: ${({ theme }) => theme.section_bg};    \r\n    `;\r\n\r\nexport const Item = styled.li`\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        border-bottom: 1px solid ${({ theme }) => theme.section_text};   \r\n\r\n        @media (max-width: 175px) {\r\n            flex-wrap: wrap;\r\n        }\r\n        ${({ hidden }) => hidden && css`\r\n            display: none;\r\n        `}\r\n    `;\r\n    \r\nexport const Button = styled.button`\r\n        text-transform: uppercase;\r\n        cursor: pointer;\r\n        border: none;\r\n        min-width: 30px;\r\n        min-height: 30px;\r\n        transition: color 0.4s;\r\n        transition: transform 0.1s;\r\n        border-radius: 5px;\r\n        background-position: center;\r\n        transition: background-color 0.4s;\r\n        background-repeat: no-repeat;\r\n\r\n        @media (max-width: 359px) {\r\n            min-width: 25px;\r\n            min-height: 25px;\r\n        }\r\n        \r\n        ${({ done }) => done && css`\r\n            background-color: ${({ theme }) => theme.greenButton};\r\n            margin-right: 15px;\r\n\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.greenButton_lighter};\r\n            }\r\n            &:active {\r\n                transform: scale(0.85);\r\n            }\r\n        `}\r\n\r\n        ${({ doneToggled }) => doneToggled && css`\r\n            background-image: url(${checked});\r\n            background-size: 75%;\r\n        `}\r\n        \r\n        ${({ remove }) => remove && css`\r\n            background-color: ${({ theme }) => theme.redButton};\r\n            background-image: url(${trash});\r\n            background-size: 85%;\r\n            margin-left: 15px;\r\n\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.redButton_lighter};\r\n            }\r\n            &:active {\r\n                transform: scale(0.85);\r\n            }\r\n        `}\r\n\r\n        ${({ removeToggled }) => removeToggled && css`\r\n            background-image: ${checked};\r\n            background-size: 75%;\r\n        `}\r\n`;","import React from \"react\";\r\nimport { Paragraph, List, Item, Statement, Button } from \"./styled\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => {\r\n    if (!tasks.length) {\r\n        return (\r\n            <Paragraph centered>\r\n                There are currently no tasks to display\r\n            </Paragraph>\r\n        )\r\n    }\r\n    else return (\r\n        <List className=\"tasks__list\">\r\n            <Statement\r\n                content={hideDone ? hideDone : \"\"}\r\n            >\r\n            </Statement>\r\n            {tasks.map((task) =>\r\n                <Item key={task.id} hidden={task.done && hideDone}>\r\n                    <Button\r\n                        onClick={() => toggleTaskDone(task.id)}\r\n                        done\r\n                        doneToggled={task.done}>\r\n                    </Button>\r\n                    <Paragraph done={task.done}>\r\n                        {task.content}\r\n                    </Paragraph>\r\n                    <Button\r\n                        onClick={() => removeTask(task.id)}\r\n                        remove>\r\n                    </Button>\r\n                </Item >\r\n            )}\r\n        </List >\r\n    )\r\n};\r\n\r\nexport default Tasks;","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonContainer = styled.div`\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        flex-wrap: wrap;\r\n\r\n        @media (max-width: 399px) {\r\n            justify-content: center;\r\n        }\r\n    `;\r\n    \r\nexport const Button = styled.button`\r\n        text-transform: uppercase;\r\n        cursor: pointer;\r\n        border: none;\r\n        padding: 10px 20px;\r\n        color: #ffffff;\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n        margin: 10px;\r\n        transition: color 0.4s;\r\n        transition: transform 0.1s;\r\n        transition: background-color 0.4s;\r\n\r\n        ${({ doneAll }) => doneAll && css`\r\n            background-color: ${({ theme }) => theme.greenButton};\r\n            border-radius: 5px;\r\n            transition: 0.5s;\r\n\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.greenButton_lighter};\r\n            }\r\n            \r\n            &:active {\r\n                transform: scale(0.9);\r\n            }\r\n            &:disabled {\r\n                background-color: #ccc;\r\n                border-radius: 5px;\r\n                cursor: default;\r\n            }\r\n        `}\r\n\r\n        ${({ hideDone }) => hideDone && css`\r\n                background-color: ${({ theme }) => theme.greenButton};\r\n                border-radius: 5px;\r\n                transition: 0.3s;\r\n\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.greenButton_lighter};\r\n            }\r\n\r\n            &:active {\r\n                transform: scale(0.9);\r\n            }\r\n\r\n            &:disabled {\r\n                background-color: #ccc;\r\n                border-radius: 5px;\r\n                cursor: default;\r\n            }\r\n        `}\r\n\r\n        ${({ removeAll }) => removeAll && css`\r\n                background-color: ${({ theme }) => theme.redButton};\r\n                border-radius: 5px;\r\n                transition: 0.3s;\r\n\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.redButton_lighter};\r\n            }\r\n            \r\n            &:active {\r\n                transform: scale(0.9);\r\n            }\r\n        `}\r\n    `;","import React from 'react';\r\nimport { ButtonContainer, Button } from \"./styled\"\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone, removeAllTasks }) => (\r\n    tasks.length > 0 && (\r\n        <ButtonContainer>\r\n            <Button\r\n                onClick={setAllDone}\r\n                doneAll\r\n                disabled={tasks.every(({ done }) => done)}>\r\n                set all as done\r\n                </Button>\r\n            <Button\r\n                onClick={toggleHideDone}\r\n                hideDone\r\n                disabled={tasks.every(({ done }) => !done || undefined)}>\r\n                {hideDone ? \"show\" : \"hide\"} done\r\n                 </Button>\r\n            <Button\r\n                onClick={removeAllTasks}\r\n                removeAll>\r\n                remove all tasks\r\n                 </Button>\r\n        </ButtonContainer>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.footer`\r\n        margin: 10px auto;\r\n\r\n        @media (max-width: 459px) {\r\n            flex-wrap: wrap;\r\n        }\r\n    `;","import React from 'react';\r\nimport Buttons from './Buttons';\r\nimport Section from '../Section';\r\nimport { FooterContainer } from \"./styled\"\r\n\r\nconst Footer = ({ tasks, hideDone, toggleHideDone, setAllDone, removeAllTasks }) => (\r\n    <FooterContainer>\r\n        {tasks.length > 0 && (\r\n            <Section\r\n                body={<Buttons\r\n                    tasks={tasks}\r\n                    hideDone={hideDone}\r\n                    toggleHideDone={toggleHideDone}\r\n                    setAllDone={setAllDone}\r\n                    removeAllTasks={removeAllTasks}\r\n                />}\r\n            />\r\n        )}\r\n    </FooterContainer>\r\n)\r\n\r\nexport default Footer;","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./themes\";\nimport { GlobalStyles } from \"./Globalstyle\";\nimport { useLocalStorageState } from \"./useLocalStorageState\";\nimport { useTasks } from \"./useTasks\";\nimport Wrapper from './Wrapper';\nimport FlexContainer from './Wrapper/FlexContainer';\nimport Switch from './Switch';\nimport Header from './Header';\nimport Main from './Main';\nimport Section from './Section';\nimport Form from './Form';\nimport Tasks from './Tasks';\nimport Footer from './Footer';\n\nfunction App() {\n\n  const [hideDone, setHideDone] = useLocalStorageState(\"hideDone\", false);\n  const [theme, setTheme] = useLocalStorageState(\"theme\", \"light\");\n  const [buttonState, setButtonState] = useLocalStorageState(\"buttonState\", \"\");\n\n  const { tasks,\n    addTask,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    removeAllTasks\n  } = useTasks();\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const themeChange = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\")\n      setButtonState(\"toggled\")\n    }\n    else { \n      setTheme(\"light\")\n      setButtonState(\"\")\n   };\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <Wrapper>\n        <FlexContainer>\n          <Switch\n            event={themeChange}\n            state={buttonState}\n          />\n          <Header title=\"TASKER\" />\n          <Main>\n            <Section\n              title=\"add new task\"\n              body={\n                <Form addTask={addTask} />\n              }\n            />\n            <Section\n              title=\"task list\"\n              body={\n                <Tasks\n                  tasks={tasks}\n                  hideDone={hideDone}\n                  removeTask={removeTask}\n                  toggleTaskDone={toggleTaskDone}\n                />\n              }\n            />\n          </Main>\n          <Footer\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n            removeAllTasks={removeAllTasks}\n          />\n        </FlexContainer>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useLocalStorageState } from \"./useLocalStorageState\";\r\n\r\nexport const useTasks = () => {\r\n\r\n    const [tasks, setTasks] = useLocalStorageState(\"tasks\", []);\r\n\r\n    const addTask = (newTaskContent) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n                content: newTaskContent,\r\n            }\r\n        ]\r\n        );\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            };\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\r\n    };\r\n\r\n    const removeAllTasks = () => {\r\n        setTasks([]);\r\n    };\r\n    return {\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        removeAllTasks\r\n    };\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './App/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/checked.ad3ce474.svg\";"],"sourceRoot":""}