{"version":3,"sources":["App/Logo/logo.svg","App/Tasks/checked.svg","App/Tasks/trash.svg","App/Tasks/pen.svg","App/themes.js","App/Globalstyle.js","App/useLocalStorageState.js","App/Wrapper/styled.js","App/Wrapper/index.js","App/FlexContainer/styled.js","App/FlexContainer/index.js","App/Switch/styled.js","App/Switch/index.js","App/Header/styled.js","App/Logo/styled.js","App/Logo/index.js","App/Header/index.js","App/Main/index.js","App/Section/styled.js","App/Section/index.js","App/Form/styled.js","App/Form/index.js","App/Tasks/styled.js","App/Tasks/EditForm/styled.js","App/Tasks/EditForm/index.js","App/Tasks/index.js","App/Footer/Buttons/styled.js","App/Footer/Buttons/index.js","App/Footer/styled.js","App/Footer/index.js","App/App.js","App/useTasks.js","App/serviceWorker.js","index.js"],"names":["module","exports","themes","light","colors","background","sectionBackground","sectionText","shadow","greenButton","redButton","yellowButton","switch","svgImage","translate","breakpoints","phone","tablet","desktop","dark","GlobalStyles","createGlobalStyle","theme","useLocalStorageState","key","value","useState","localStorageState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","MainWrapper","styled","div","Wrapper","children","Container","FlexContainer","SwitchContainer","aside","Label","label","toggle","css","Button","button","toggled","Switch","onChange","htmlFor","id","onClick","HeaderContainer","header","HeaderSection","section","HeaderTitle","h1","Image","img","Logo","src","logo","alt","Header","title","Main","SectionContainer","SectionHeader","h2","Section","body","FormContainer","form","FormInput","input","FormButton","Form","addTask","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","newTaskContentTrimmed","trim","current","focus","ref","type","autoFocus","placeholder","target","Statement","span","content","Paragraph","p","centered","done","List","ul","Item","li","hidden","active","checked","edit","pen","remove","trash","EditFormInput","EditForm","editTask","taskID","editTaskContent","setEditTaskContent","editTaskContentTrimmed","Tasks","tasks","hideDone","removeTask","toggleTaskDone","toggleEditTask","length","map","task","ButtonContainer","doneAll","removeAll","redButtonLighter","Buttons","toggleHideDone","setAllDone","removeAllTasks","disabled","every","undefined","FooterContainer","footer","Footer","App","setHideDone","setTheme","setTasks","filter","useTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.73949d94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.808985cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.ad3ce474.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.04d13a08.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.0bfe9232.svg\";","export const themes = {\r\n    light: {\r\n        colors: {\r\n            background: \"#c4bb91\",\r\n            sectionBackground: \"#fff\",\r\n            sectionText: \"#141414\",\r\n            shadow: \"#555\",\r\n            greenButton: \"rgb(0, 172, 29)\",\r\n            redButton: \"rgb(172, 0, 0)\",\r\n            yellowButton: \"rgb(227, 204, 52)\",\r\n            switch: \"hsl(0, 0%, 100%)\",\r\n            svgImage: \"brightness(100%) invert(0%)\",\r\n            translate: \"translatex(130%)\",\r\n        },\r\n\r\n        breakpoints: {\r\n            phone: \"375px\",\r\n            tablet: \"768px\",\r\n            desktop: \"1200px\",\r\n\r\n        },\r\n    },\r\n\r\n    dark: {\r\n        colors: {\r\n            background: \"#1a1a1a\",\r\n            sectionBackground: \"#2a3a41\",\r\n            sectionText: \"rgb(255, 255, 255)\",\r\n            shadow: \"rgb(156, 156, 156)\",\r\n            greenButton: \"rgb(0, 172, 29)\",\r\n            redButton: \"rgb(172, 0, 0)\",\r\n            yellowButton: \"rgb(227, 204, 52)\",\r\n            switch: \"#2a3a41\",\r\n            svgImage: \"brightness(0%) invert(100%)\",\r\n            translate: \"translatex(0%)\",\r\n        },\r\n\r\n        breakpoints: {\r\n            phone: \"375px\",\r\n            tablet: \"768px\",\r\n            desktop: \"1200px\",\r\n        },\r\n    },\r\n};","import { createGlobalStyle } from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n  body {\r\n    background: ${({ theme }) => theme.colors.background};\r\n    font-family: \"Roboto Condensed\", sans-serif;\r\n    transition: all 0.3s linear;\r\n    margin: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\r\n        font-size: 15px;\r\n    }\r\n  }\r\n  `","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorageState = (key, value) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(key);\r\n        if (localStorageState === null) {\r\n            return value;\r\n        }\r\n        return JSON.parse(localStorageState);\r\n    };\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key,\r\n            JSON.stringify(state));\r\n    }, [key, state]);\r\n    \r\n    return [state, setState];\r\n};","import styled from \"styled-components\";\r\n\r\nexport const MainWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n`;","import React from 'react';\r\nimport { MainWrapper } from \"./styled\"\r\n\r\nconst Wrapper = ({ children }) => (\r\n    <MainWrapper>\r\n        {children}\r\n    </MainWrapper>\r\n)\r\n\r\nexport default Wrapper;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n        max-width: 800px;\r\n        width: 100%;\r\n    `;","import React from 'react';\r\nimport { Container } from \"./styled\"\r\n\r\nconst FlexContainer = ({ children }) => (\r\n    <Container>\r\n        {children}\r\n    </Container>\r\n\r\n);\r\n\r\nexport default FlexContainer;","import styled, { css } from \"styled-components\";\r\n\r\nexport const SwitchContainer = styled.aside`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    margin: 10px auto;\r\n    max-width: 800px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    font-weight: 700;\r\n    color: ${({ theme }) => theme.colors.sectionText};\r\n    margin-left: 10px;\r\n\r\n    ${({ toggle }) => toggle && css`\r\n        position: relative;\r\n        display: block;\r\n        padding: 5px 10px;\r\n        width: 65px;\r\n        background-color: ${({ theme }) => theme.colors.switch};\r\n        background-image: ${({ theme }) => theme.colors.switch};\r\n        transition: all 0.5s;\r\n        cursor: pointer;\r\n        box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.colors.shadow};\r\n\r\n        &::after {\r\n            content: \"\";\r\n            display: block;\r\n            height: 20px;\r\n            width: 20px;\r\n            background-color: ${({ theme }) => theme.colors.background};\r\n            border: 1px solid ${({ theme }) => theme.colors.sectionText};\r\n            transition: all 0.3s;\r\n            transform: ${({ theme }) => theme.colors.translate};;\r\n        }\r\n\r\n        &:hover {\r\n            background-image: linear-gradient(to right, #2a3a41, #c4bb91);\r\n        }\r\n    `}\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    display: none;\r\n\r\n    ${({ toggled }) => toggled && css`   \r\n        +Label::after {\r\n            transform: ${({ theme }) => theme.colors.translate};;\r\n        }\r\n    `}\r\n`;","import React from \"react\";\r\nimport { SwitchContainer, Label, Button } from \"./styled\"\r\n\r\nconst Switch = ({ onChange }) => (\r\n\r\n  <SwitchContainer>\r\n    <Label htmlFor=\"switch\">\r\n      Night Mode\r\n    </Label>\r\n    <Button\r\n      id=\"switch\"\r\n      onClick={onChange}\r\n    />\r\n    <Label toggle htmlFor=\"switch\"></Label>\r\n  </SwitchContainer>\r\n  \r\n);\r\n\r\nexport default Switch;","import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.header`\n    margin: 10px auto;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nexport const HeaderSection = styled.section`\n    display: flex;\n    justify-content: center;\n    background-color: ${({ theme }) => theme.colors.sectionBackground};\n    color: ${({ theme }) => theme.colors.sectionText};\n    width: 100%;\n    padding: 20px;\n    box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.colors.shadow};\n`;\n\nexport const HeaderTitle = styled.h1`\n    text-transform: capitalize;\n    color: ${({ theme }) => theme.colors.sectionText};\n    font-size: 40px;\n    text-align: center;   \n\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\n        font-size: 30px;\n    }\n`;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n    align-self: center;\r\n    margin: 10px;\r\n    width: 70px;\r\n    filter: ${({ theme }) => theme.colors.svgImage};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\r\n        max-width: 60%;\r\n    }\r\n`;","import React from 'react';\r\nimport { Image } from \"./styled\"\r\nimport logo from './logo.svg';\r\n\r\nconst Logo = () => (\r\n    <Image\r\n        src={logo}\r\n        alt=\"Logotype\"\r\n    />\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { HeaderContainer, HeaderSection, HeaderTitle } from \"./styled\"\r\nimport Logo from \"../Logo\";\r\n\r\nconst Header = ({ title }) => (\r\n    <HeaderContainer>\r\n        <HeaderSection>\r\n            <Logo />\r\n            <HeaderTitle>{title}</HeaderTitle>\r\n        </HeaderSection>\r\n    </HeaderContainer>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Main = ({children}) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Main;","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n    background-color: ${({ theme }) => theme.colors.sectionBackground};\r\n    color: ${({ theme }) => theme.colors.sectionText};\r\n    width: 100%;\r\n    padding: 20px;\r\n    margin: 10px 0px;\r\n    box-shadow: 1px 1px 2px 1px ${({ theme }) => theme.colors.shadow};\r\n`;\r\nexport const SectionHeader = styled.h2`\r\n    text-transform: uppercase;\r\n    font-size: 20px;\r\n    padding-bottom: 10px;\r\n    border-bottom: 2px solid;\r\n    border-color: ${({ theme }) => theme.colors.sectionText};\r\n`;","import React from 'react';\r\nimport { SectionContainer, SectionHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, body }) => (\r\n    <SectionContainer>\r\n        {\r\n            title && <SectionHeader>{title}</SectionHeader>\r\n        }\r\n        {body}\r\n    </SectionContainer>\r\n)\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n    display: flex;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\r\n            flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n        width: 100%;\r\n        padding: 10px 20px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    border: none;\r\n    min-width: max-content;\r\n    background-color: ${({ theme }) => theme.colors.sectionText};\r\n    color: ${({ theme }) => theme.colors.sectionBackground};\r\n    letter-spacing: 1px;\r\n    padding: 10px 10px;\r\n    margin-left: 10px;\r\n    transition: color 0.4s, transform 0.1s, background-color 0.4s;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\r\n        margin-top: 10px;\r\n        margin-left: 0px;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.colors.sectionBackground};\r\n        color: ${({ theme }) => theme.colors.sectionText};\r\n        border: 1px solid ${({ theme }) => theme.colors.sectionText};\r\n        font-weight: bold;\r\n        padding-left: 7px;\r\n    }\r\n    &:active {\r\n        border: 1px solid ${({ theme }) => theme.colors.sectionText};\r\n        transform: scale(0.9);\r\n    }\r\n`;","import React, { useState, useRef } from 'react';\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\"\r\n\r\nconst Form = ({ addTask }) => {\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef();\r\n\r\n    const focus = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTaskContentTrimmed = newTaskContent.trim();\r\n        if (!newTaskContentTrimmed) {\r\n            return\r\n        }\r\n        event.preventDefault();\r\n        addTask(newTaskContentTrimmed);\r\n        setNewTaskContent(\"\");\r\n        focus();\r\n    };\r\n\r\n    return (\r\n        <FormContainer onSubmit={onFormSubmit}>\r\n            <FormInput\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                autoFocus\r\n                placeholder=\"write your task here\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <FormButton>\r\n                submit\r\n            </FormButton>\r\n        </FormContainer>\r\n    );\r\n};\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\nimport checked from \"./checked.svg\";\r\nimport trash from \"./trash.svg\";\r\nimport pen from \"./pen.svg\";\r\n\r\nexport const Statement = styled.span`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    font-style: italic;\r\n\r\n    ${({ content }) => content && css`\r\n        &::after {\r\n            content: \"Done tasks are hidden\";\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    font-weight: 400;\r\n    max-width: 100%;\r\n    text-align: justify;\r\n    flex-grow: 1;\r\n    font-size: 20px;\r\n    overflow-wrap: break-word;\r\n    word-wrap: break-word;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\r\n        font-size: 16px;\r\n    }\r\n\r\n    ${({ centered }) => centered && css`\r\n        text-align: center;\r\n        font-style: italic;\r\n    `}\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n        font-style: italic;\r\n    `}\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding-left: 0px;\r\n    background-color: ${({ theme }) => theme.colors.sectionBackground};    \r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.sectionText};   \r\n  \r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    border: none;\r\n    min-width: 30px;\r\n    min-height: 30px;\r\n    transition: color 0.4s;\r\n    transition: transform 0.1s;\r\n    border-radius: 5px;\r\n    background-position: center;\r\n    transition: background-color 0.4s;\r\n    background-repeat: no-repeat;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.phone}) {\r\n        min-width: 25px;\r\n        min-height: 25px;\r\n    }\r\n    \r\n    ${({ active }) => active && css`\r\n        background-color: ${({ theme }) => theme.colors.greenButton};\r\n        margin-right: 15px;\r\n        transition: 0.5s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        &:active {\r\n            transform: scale(0.85);\r\n            filter: brightness(120%);\r\n        }\r\n    `}\r\n\r\n    ${({ done }) => done && css`\r\n        background-image: url(${checked});\r\n        background-size: 75%;\r\n    `}\r\n\r\n    ${({ edit }) => edit && css`\r\n        background-color: ${({ theme }) => theme.colors.yellowButton};\r\n        background-image: url(${pen});\r\n        background-size: 75%;\r\n        margin-left: 15px;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        &:active {\r\n            transform: scale(0.85);\r\n            filter: brightness(120%);\r\n        }\r\n    `}\r\n    \r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.colors.redButton};\r\n        background-image: url(${trash});\r\n        background-size: 85%;\r\n        margin-left: 15px;\r\n        transition: 0.5s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        &:active {\r\n            transform: scale(0.85);\r\n            filter: brightness(120%);\r\n        }\r\n    `}\r\n\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const FormContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    \r\n    @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const EditFormInput = styled.input`\r\n    width: 100%;\r\n    padding: 5px 20px; \r\n    display: none;\r\n\r\n    ${({ edit }) => edit && css`\r\n        display: unset;\r\n    `}   \r\n`;\r\n\r\nexport const Button = styled.button`\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    border: none;\r\n    min-width: max-content;\r\n    background-color: ${({ theme }) => theme.colors.sectionText};\r\n    color: ${({ theme }) => theme.colors.sectionBackground};\r\n    letter-spacing: 1px;\r\n    padding: 5px 10px;\r\n    margin-left: 10px;\r\n    transition: color 0.4s, transform 0.1s, background-color 0.4s;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\r\n        margin-top: 10px;\r\n        margin-left: 0px;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.colors.sectionBackground};\r\n        color: ${({ theme }) => theme.colors.sectionText};\r\n        border: 1px solid ${({ theme }) => theme.colors.sectionText};\r\n        font-weight: bold;\r\n        padding-left: 7px;\r\n    }\r\n    &:active {\r\n        border: 1px solid ${({ theme }) => theme.colors.sectionText};\r\n        transform: scale(0.9);\r\n    }\r\n`;","import React, { useState } from 'react'\r\nimport { EditFormInput, Button, FormContainer } from \"./styled\"\r\n\r\nconst EditForm = ({ edit, value, editTask, taskID }) => {\r\n\r\n    const [editTaskContent, setEditTaskContent] = useState(value);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const editTaskContentTrimmed = editTaskContent.trim();\r\n        if (!editTaskContentTrimmed) {\r\n            return\r\n        }\r\n        event.preventDefault();\r\n        editTask(editTaskContentTrimmed, taskID);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n\r\n            <FormContainer>\r\n                <EditFormInput\r\n                    edit={edit}\r\n                    value={editTaskContent}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    onChange={({ target }) => setEditTaskContent(target.value)}\r\n                />\r\n                <Button>\r\n                    submit\r\n            </Button>\r\n            </FormContainer>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditForm;\r\n","import React from \"react\";\r\nimport { Paragraph, List, Item, Statement, Button } from \"./styled\"\r\nimport EditForm from \"./EditForm\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone, toggleEditTask, editTask }) => {\r\n    if (!tasks.length) {\r\n        return (\r\n            <Paragraph centered>\r\n                There are currently no tasks to display\r\n            </Paragraph>\r\n        )\r\n    }\r\n    else return (\r\n        <List>\r\n            <Statement\r\n                content={hideDone || \"\"}\r\n            >\r\n            </Statement>\r\n            {tasks.map((task) =>\r\n                <Item key={task.id} hidden={task.done && hideDone}>\r\n                    <Button\r\n                        onClick={() => toggleTaskDone(task.id)}\r\n                        active\r\n                        done={task.done}\r\n                    />\r\n                    <Paragraph done={task.done}>\r\n                        {task.edit\r\n                            ? <EditForm\r\n                                edit={task.edit}\r\n                                value={task.content}\r\n                                editTask={editTask}\r\n                                taskID={task.id}\r\n                            />\r\n                            : task.content}\r\n\r\n                    </Paragraph>\r\n                    <Button\r\n                        edit\r\n                        onClick={() => toggleEditTask(task.id)}\r\n                    />\r\n                    <Button\r\n                        onClick={() => removeTask(task.id)}\r\n                        remove\r\n                    />\r\n                </Item >\r\n            )}\r\n        </List >\r\n    )\r\n};\r\n\r\nexport default Tasks;","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    flex-wrap: wrap;\r\n`;\r\n    \r\nexport const Button = styled.button`\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    color: #ffffff;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    margin: 10px;\r\n    transition: color 0.4s;\r\n    transition: transform 0.1s;\r\n    transition: background-color 0.4s;\r\n\r\n    ${({ doneAll }) => doneAll && css`\r\n        background-color: ${({ theme }) => theme.colors.greenButton};\r\n        border-radius: 5px;\r\n        transition: 0.5s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        \r\n        &:active {\r\n            transform: scale(0.9);\r\n            filter: brightness(120%);\r\n        }\r\n        &:disabled {\r\n            background-color: #ccc;\r\n            filter: brightness(100%);\r\n            cursor: default;\r\n        }\r\n    `}\r\n\r\n    ${({ hideDone }) => hideDone && css`\r\n            background-color: ${({ theme }) => theme.colors.greenButton};\r\n            border-radius: 5px;\r\n            transition: 0.3s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        \r\n        &:active {\r\n            transform: scale(0.9);\r\n            filter: brightness(120%);\r\n        }\r\n        &:disabled {\r\n            background-color: #ccc;\r\n            filter: brightness(100%);\r\n            cursor: default;\r\n        }\r\n    `}\r\n\r\n    ${({ removeAll }) => removeAll && css`\r\n            background-color: ${({ theme }) => theme.colors.redButton};\r\n            border-radius: 5px;\r\n            transition: 0.3s;\r\n\r\n        &:hover {\r\n            background-color: ${({ theme }) => theme.colors.redButtonLighter};\r\n        }\r\n        \r\n        &:active {\r\n            transform: scale(0.9);\r\n        }\r\n    `}\r\n`;","import React from 'react';\r\nimport { ButtonContainer, Button } from \"./styled\"\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone, removeAllTasks }) => (\r\n    tasks.length > 0 && (\r\n        <ButtonContainer>\r\n            <Button\r\n                onClick={setAllDone}\r\n                doneAll\r\n                disabled={tasks.every(({ done }) => done)}>\r\n                set all as done\r\n            </Button>\r\n            <Button\r\n                onClick={toggleHideDone}\r\n                hideDone\r\n                disabled={tasks.every(({ done }) => !done || undefined)}>\r\n                {hideDone ? \"show\" : \"hide\"} done\r\n            </Button>\r\n            <Button\r\n                onClick={removeAllTasks}\r\n                removeAll>\r\n                remove all tasks\r\n            </Button>\r\n        </ButtonContainer>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.footer`\r\n    margin: 10px auto;\r\n`;","import React from 'react';\r\nimport Buttons from './Buttons';\r\nimport Section from '../Section';\r\nimport { FooterContainer } from \"./styled\"\r\n\r\nconst Footer = ({ tasks, hideDone, toggleHideDone, setAllDone, removeAllTasks }) => (\r\n    <FooterContainer>\r\n        {tasks.length > 0 && (\r\n            <Section\r\n                body={<Buttons\r\n                    tasks={tasks}\r\n                    hideDone={hideDone}\r\n                    toggleHideDone={toggleHideDone}\r\n                    setAllDone={setAllDone}\r\n                    removeAllTasks={removeAllTasks}\r\n                />}\r\n            />\r\n        )}\r\n    </FooterContainer>\r\n)\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { themes } from \"./themes\";\r\nimport { GlobalStyles } from \"./Globalstyle\";\r\nimport { useLocalStorageState } from \"./useLocalStorageState\";\r\nimport { useTasks } from \"./useTasks\";\r\nimport Wrapper from './Wrapper';\r\nimport FlexContainer from './FlexContainer';\r\nimport Switch from './Switch';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Section from './Section';\r\nimport Form from './Form';\r\nimport Tasks from './Tasks';\r\nimport Footer from './Footer';\r\n\r\nfunction App() {\r\n\r\n  const [hideDone, setHideDone] = useLocalStorageState(\"hideDone\", false);\r\n  const [theme, setTheme] = useLocalStorageState(\"currentTheme\", \"light\");\r\n  \r\n  const { tasks,\r\n    addTask,\r\n    editTask,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    removeAllTasks,\r\n    toggleEditTask,\r\n  } = useTasks();\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const themeChange = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\")\r\n    }\r\n    else { \r\n      setTheme(\"light\")\r\n   };\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? themes.light : themes.dark}>\r\n      <GlobalStyles/>\r\n      <Wrapper>\r\n        <FlexContainer>\r\n          <Switch\r\n            onChange={themeChange}\r\n          />\r\n          <Header title=\"TASKER\"/>\r\n          <Main>\r\n            <Section\r\n              title=\"add new task\"\r\n              body={\r\n                <Form addTask={addTask}/>\r\n              }\r\n            />\r\n            <Section\r\n              title=\"task list\"\r\n              body={\r\n                <Tasks\r\n                  tasks={tasks}\r\n                  hideDone={hideDone}\r\n                  removeTask={removeTask}\r\n                  toggleTaskDone={toggleTaskDone}\r\n                  toggleEditTask={toggleEditTask}\r\n                  editTask={editTask}\r\n                />\r\n              }\r\n            />\r\n          </Main>\r\n          <Footer\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n            removeAllTasks={removeAllTasks}\r\n          />\r\n        </FlexContainer>\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useLocalStorageState } from \"./useLocalStorageState\";\r\n\r\nexport const useTasks = () => {\r\n\r\n    const [tasks, setTasks] = useLocalStorageState(\"tasks\", []);\r\n\r\n    const addTask = (newTaskContent) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n                content: newTaskContent,\r\n            }\r\n        ]\r\n        );\r\n    };\r\n\r\n    const editTask = (editTaskContent, id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, content: editTaskContent, edit: false};\r\n            };\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            };\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const toggleEditTask = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, edit: !task.edit };\r\n            };\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\r\n    };\r\n\r\n    const removeAllTasks = () => {\r\n        setTasks([]);\r\n    };\r\n    return {\r\n        tasks,\r\n        addTask,\r\n        editTask,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        removeAllTasks,\r\n        toggleEditTask\r\n    };\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './App/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}